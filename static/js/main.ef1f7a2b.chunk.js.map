{"version":3,"sources":["components/Button.js","components/Header.js","components/AddTask.js","components/EditTask.js","components/Task.js","components/Tasks.js","components/Footer.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onAdd","className","style","backgroundColor","onClick","e","preventDefault","Header","title","isShowed","location","useLocation","pathname","defaultProps","AddTask","useState","name","setName","time","setTime","reminder","setReminder","useContext","TaskContext","tasks","setTasks","task","a","fetch","method","headers","body","JSON","stringify","res","json","data","console","log","onSubmit","alert","type","placeholder","value","onChange","target","checked","background","EditTask","updateShowEditTask","fetchTask","id","update","taskToToggle","updTask","map","Task","showEdit","setShowEdit","showEditTask","setShowEditTask","deleteTask","filter","ToggleReminder","onDoubleClick","onMouseEnter","onMouseLeave","cursor","Tasks","height","document","getElementsByClassName","length","Footer","textAlign","to","About","React","createContext","App","useEffect","fetchTasks","tasksFromServer","getTasks","ShowAddTask","setShowAddTask","Provider","path","exact","render","props","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ef1f7a2b.chunk.js","sourcesContent":["// Button for adding a task \r\nconst Button = ({color, text,onAdd}) => {\r\n\r\n    return (\r\n        <button className='btn' style={ {backgroundColor : color}} onClick={ e=> {e.preventDefault();onAdd()}}>{text}</button>\r\n    )\r\n}\r\n\r\nexport default Button\r\n","// Header file - adds the title of the page\r\nimport propTypes  from 'prop-types'\r\nimport Button from './Button'\r\nimport { useLocation } from 'react-router-dom'\r\nconst Header = ({title,onAdd, isShowed}) => {\r\n    const location =  useLocation();\r\n    return (\r\n        <header className='header'>\r\n            <h1>{title}</h1>\r\n            { location.pathname==='/' && (\r\n                <Button color={isShowed ? 'red' : 'green'} text={isShowed ? 'Close' : 'Add Task'} onAdd={onAdd} />\r\n            )}\r\n        </header>\r\n    )\r\n}\r\n\r\n// Title of the app\r\nHeader.defaultProps = {\r\n    title : 'Task Tracker', \r\n}\r\n\r\n// Checking the data types of the props\r\nHeader.propTypes = {\r\n    title : propTypes.string.isRequired,\r\n}\r\nexport default Header\r\n","import { useState,useContext } from \"react\"\r\nimport { TaskContext } from \"../App\";\r\nconst AddTask = ({onAdd}) => {\r\n    const [name,setName] = useState('');\r\n    const [time, setTime] = useState('');\r\n    const [reminder,setReminder] = useState(false);\r\n    const {tasks,setTasks} =  useContext(TaskContext);\r\n    const AddTask = async (task) => {\r\n        const res = await fetch('https://reactjs-task-tracker-app.herokuapp.com/tasks',{\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type' :'application/json',\r\n            },\r\n            body: JSON.stringify(task),\r\n        })\r\n        const data = await res.json();\r\n        setTasks([...tasks,data])\r\n        console.log(res);\r\n    }\r\n const addToTask = (e) => {\r\n        e.preventDefault();\r\n        if(!name) {\r\n            alert('Please add Task name')\r\n            return;\r\n        }\r\n        const task = {\r\n            name: name,\r\n            time: time,\r\n            reminder: reminder,\r\n        }\r\n        AddTask(task);\r\n        setName('');\r\n        setTime('');\r\n        setReminder(false);\r\n        onAdd();\r\n    }\r\n    return (\r\n        \r\n        <form onSubmit={addToTask} className='add-form'>\r\n            <h4 >Create New Task</h4>\r\n            <div className='form-control'>\r\n                <label>Task - </label>\r\n                <input type=\"text\" placeholder='Add Task' value={name} onChange={e=> setName(e.target.value)}/>\r\n            </div>\r\n            <div className ='form-control'>\r\n                <label>Day and Time - </label>\r\n                <input type=\"text\" placeholder='Add Day & Time' value={time} onChange={e=> setTime(e.target.value)}/>\r\n            </div>\r\n            <div className ='form-control-check'>\r\n                <label>Set Reminder - </label>\r\n                <input type=\"checkbox\" checked={reminder} value={reminder} onChange={() => setReminder(!reminder)}/>\r\n            </div>\r\n            <button className='btn' style={{background : 'black'}}> Create Task</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import { useState,useContext } from \"react\";\r\nimport { TaskContext } from \"../App\";\r\nimport {addToTask} from './AddTask'\r\nconst EditTask = ({task,updateShowEditTask}) => {\r\n    const [name,setName] = useState(task.name);\r\n    const [time, setTime] = useState(task.time);\r\n    const [reminder,setReminder] = useState(task.reminder);\r\n    const {tasks,setTasks} = useContext(TaskContext);\r\n    const fetchTask = async (id) => {\r\n        const res = await fetch(`https://reactjs-task-tracker-app.herokuapp.com/tasks/${id}`);\r\n        const data = await res.json();\r\n        return data\r\n    }\r\n    // Toggle task reminder \r\n    const update = async () => {  \r\n        const id = task.id\r\n        const taskToToggle = await fetchTask(id);\r\n        const updTask = {...taskToToggle,name: name,time: time,reminder: reminder}\r\n        const res = await fetch(`https://reactjs-task-tracker-app.herokuapp.com/tasks/${id}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-type' :'application/json',\r\n            },\r\n            body: JSON.stringify(updTask)\r\n        })\r\n        const data = await res.json()\r\n        setTasks( tasks.map( Task=> {\r\n            if(Task.id ===data.id) {\r\n                return data;\r\n            }\r\n            return task\r\n        }))\r\n    }\r\n    const updateTask = (e) => {\r\n        e.preventDefault();\r\n        if(!name) {\r\n            alert('Please add Task name')\r\n            return;\r\n        }\r\n        update();\r\n        updateShowEditTask();\r\n    }\r\n    return (\r\n        <form  className='add-form'>\r\n            <h4 >Update Task</h4>\r\n            <div className='form-control'>\r\n                <label>Task - </label>\r\n                <input type=\"text\" placeholder='Add Task' value={name} onChange={e=> setName(e.target.value)}/>\r\n            </div>\r\n            <div className ='form-control'>\r\n                <label>Day and Time - </label>\r\n                <input type=\"text\" placeholder='Add Day  &amp Time' value={time} onChange={e=> setTime(e.target.value)}/>\r\n            </div>\r\n            <div className ='form-control-check'>\r\n                <label>Set Reminder - </label>\r\n                <input type=\"checkbox\" checked={reminder} value={reminder} onChange={() => setReminder(!reminder)}/>\r\n            </div>\r\n            <button className='btn' style={{background : 'black'}} onClick={updateTask}>Update Task</button>\r\n            <button className='btn' style={{background : 'red'}} onClick={updateShowEditTask}>Cancel</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default EditTask\r\n","import {FaTimes, FaEdit} from 'react-icons/fa'\r\nimport { useContext,useState } from 'react'\r\nimport { TaskContext } from '../App'\r\nimport EditTask from './EditTask';\r\n\r\nconst Task = ({task}) => {\r\n    const {tasks,setTasks} =useContext(TaskContext);\r\n    const [showEdit,setShowEdit] =useState(false);\r\n    const [showEditTask, setShowEditTask] = useState(false);\r\n   // delete Task function\r\n    const deleteTask = async(id) => {  \r\n       await fetch(`https://reactjs-task-tracker-app.herokuapp.com/tasks/${id}`,{\r\n           method: 'DELETE',\r\n       })\r\n        setTasks( tasks.filter( task=> (task.id!== id) ))\r\n    }\r\n    const fetchTask = async (id) => {\r\n        const res = await fetch(`https://reactjs-task-tracker-app.herokuapp.com/tasks/${id}`);\r\n        const data = await res.json();\r\n        return data\r\n    }\r\n    // Toggle task reminder \r\n    const ToggleReminder = async (id) => {  \r\n        const taskToToggle = await fetchTask(id);\r\n        const updTask = {...taskToToggle, reminder: !taskToToggle.reminder}\r\n        const res = await fetch(`https://reactjs-task-tracker-app.herokuapp.com/tasks/${id}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-type' :'application/json',\r\n            },\r\n            body: JSON.stringify(updTask)\r\n        })\r\n        const data = await res.json()\r\n        setTasks( tasks.map( task=> {\r\n            \r\n            task.reminder =  (task.id=== id) ?data.reminder : task.reminder;\r\n            return task\r\n        }))\r\n    }\r\n    const updateShowEditTask = () => {\r\n        setShowEditTask(!showEditTask)\r\n        setShowEdit(!showEdit)\r\n    }\r\n    return (\r\n        <div className={`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick ={()=>ToggleReminder(task.id)} onMouseEnter={()=>setShowEdit(true)} onMouseLeave={()=>setShowEdit(false)}>\r\n            <h3>{task.name} \r\n            <div className='options'>\r\n            { showEdit && (!showEditTask) && <FaEdit style = {{color: 'blue', cursor:'pointer'}} onClick={updateShowEditTask } />}\r\n            <FaTimes style={ {color: 'red', cursor:'pointer'}} onClick={() => deleteTask(task.id)} />\r\n            </div>\r\n            </h3>\r\n            <p>{task.time}</p>\r\n            {showEditTask && <EditTask task={task} updateShowEditTask={updateShowEditTask}/> }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import { useContext } from \"react\"\r\nimport Task from \"./Task\"\r\nimport { TaskContext } from \"../App\"\r\nconst Tasks = () => {\r\n    // Listing all the created tasks\r\n    const {tasks,setTasks} = useContext(TaskContext);\r\n    const height = document.getElementsByClassName('container');\r\n    console.log(height)\r\n//     if(height[0].offset >400) {\r\n//     const tasksStyle = {\r\n//         overflow: 'auto'    \r\n//     }\r\n// }\r\n    return (\r\n        <div >\r\n            {\r\n                (tasks.length >0 ) ?\r\n                tasks.map( task => <Task key={task.id} task={task}/>) :\r\n                <p>No more tasks to show</p>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","import { Link } from \"react-router-dom\"\r\nconst Footer = () => {\r\n    return (\r\n        <footer style={{textAlign: 'center'}}>\r\n            <p> Copyright &copy; 2021</p>\r\n            <Link to=\"/about\">About</Link>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import { Link } from \"react-router-dom\"\r\nconst About = () => {\r\n    return (\r\n    <div>\r\n            <h4>Version 1.0.0</h4>\r\n            <Link to=\"/\">Go Back</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About            ","import Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport React  from \"react\";\nimport Task from \"./components/Task\";\nimport { useState,useEffect } from \"react\";\nimport AddTask from \"./components/AddTask\";\nimport Footer from \"./components/Footer\";\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\nimport About from \"./components/About\";\nexport const TaskContext = React.createContext();\n\nfunction App() {\n  // default tasks\n  const [tasks,setTasks] = useState([]);\n  const value = {tasks, setTasks};\n  \n  //Fetching task from backend\n  useEffect(()=> {\n    const getTasks = async() => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer)\n    }\n    getTasks()\n  },[])\n  // Fetching tasks\n  const fetchTasks = async() => {\n    const res = await fetch('https://reactjs-task-tracker-app.herokuapp.com/tasks'); \n    // change the server address to your server in app.js, editTask.js, AddTask.js, task.js\n    const data = await res.json();\n    console.log(data);\n    return data\n  }\n\n  // Add task expand or collapse button\n  const [ShowAddTask,setShowAddTask] = useState(false);\n  return (\n    <Router>\n    <div className=\"container\" id='container'>\n      <TaskContext.Provider value={value} >\n      <Header onAdd={()=>setShowAddTask(!ShowAddTask)} isShowed={ShowAddTask}/>\n      { ShowAddTask && <AddTask onAdd={()=>setShowAddTask(!ShowAddTask)} />}\n      <Route path ='/' exact render={(props)=>(\n        <>\n        <Tasks />\n        </>\n      )} />\n      </TaskContext.Provider>\n\n      <Route path='/about' component={About} />\n      <Footer />\n    </div>\n    </Router>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {HashRouter as Router} from 'react-router-dom'\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n    <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}